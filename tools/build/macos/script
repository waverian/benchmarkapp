#!/usr/bin/env bash
SCRIPT_PATH="${BASH_SOURCE[0]}";

if([ -h "${SCRIPT_PATH}" ]) then
  while([ -h "${SCRIPT_PATH}" ]) do SCRIPT_PATH=`readlink "${SCRIPT_PATH}"`; done
fi
SCRIPT_PATH="$(dirname "${SCRIPT_PATH}")"
#echo $SCRIPT_PATH


# activate the virtualenv
pushd "${SCRIPT_PATH}/venv/bin"
# must be in current directory
source activate
popd

# setup the environment to not mess with the system
export DYLD_FALLBACK_LIBRARY_PATH="${SCRIPT_PATH}/../lib:$DYLD_FALLBACK_LIBRARY_PATH"
export LD_PRELOAD_PATH="${SCRIPT_PATH}/../lib"
export GST_REGISTRY="${SCRIPT_PATH}/gst.registry"
export GST_PLUGIN_SCANNER="${SCRIPT_PATH}/gst-plugin-scanner"
export GTK_PATH="${SCRIPT_PATH}/../Frameworks/GStreamer.framework/Versions/Current"
export GST_PLUGIN_SYSTEM_PATH="${SCRIPT_PATH}/../Frameworks/GStreamer.framework/Versions/Current/lib/gstreamer-1.0"
export GIO_EXTRA_MODULES="${SCRIPT_PATH}/../Frameworks/GStreamer.framework/Versions/Current/lib/gio/modules"
export KIVY_HOME="${SCRIPT_PATH}/.kivy"

# if an app is available, use it
if [ -f "${SCRIPT_PATH}/yourapp" ] || [ -h "${SCRIPT_PATH}/yourapp" ]; then
  "${SCRIPT_PATH}/yourapp"
  exit 0
elif [ -d "${SCRIPT_PATH}/yourapp" ]; then
  #cd "${SCRIPT_PATH}/yourapp"
  #echo $SCRIPT_PATH
  #echo "<<<<"
  if [ -f "main.so" ]; then
      exec "${SCRIPT_PATH}/python" -c "import main"
    exit 1
  fi
    if [ -f "main.pyo" ] || [ -f "${SCRIPT_PATH}/yourapp/main.pyc" ] || [ -f "main.opt-2.pyc" ]; then
        #echo "${SCRIPT_PATH}/venv/bin/python"
        #echo "<<<<"
        exec "${SCRIPT_PATH}/venv/bin/python" "$SCRIPT_PATH/yourapp/main.pyc"
    exit 1
    else
        exec "${SCRIPT_PATH}/python" -m main "$@"
    exit 1
    fi

# default drag & drop support
elif [ $# -ne 0 ]; then
        exec "python" "$@"

# start a python shell, only if we didn't double-clicked
elif [ "$SHLVL" -gt 1 ]; then
        exec "${SCRIPT_PATH}/python"
fi
